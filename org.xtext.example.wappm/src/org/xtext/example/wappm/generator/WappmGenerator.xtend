/*
 * generated by Xtext 2.14.0
 */
package org.xtext.example.wappm.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.wappm.wappm.WebModel
import org.xtext.example.wappm.wappm.HypertextLayer
import org.xtext.example.wappm.wappm.ContentLayer
import org.xtext.example.wappm.wappm.WebClass
import org.xtext.example.wappm.wappm.Attribute
import org.xtext.example.wappm.wappm.Page
import org.xtext.example.wappm.wappm.IndexPage
import org.xtext.example.wappm.wappm.StaticPage
import org.xtext.example.wappm.wappm.DetailPage
import org.xtext.example.wappm.wappm.DynamicPage
import org.xtext.example.wappm.wappm.AppTypes

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class WappmGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for (w : resource.allContents.toIterable.filter(WebModel)) {
            fsa.generateFile(
                w.name + ".java",
                w.compile)
        }
	}
	
	def compile(WebModel w) '''
		package «w.name»;

		«w.hypertext.compile»
		
		«w.content.compile»
	'''	
	
	def compile(HypertextLayer h) '''
		«FOR p : h.pages»
			«p.compile»
		«ENDFOR»
	'''
	
	def compile(Page p) '''
		«IF p instanceof DynamicPage»
			«(p as DynamicPage).compile»
		«ELSEIF p instanceof StaticPage»
			«(p as StaticPage).compile»
		«ENDIF»
	'''	
	
	def compile(DynamicPage dp) '''
		«IF dp instanceof IndexPage»
			«(dp as IndexPage).compile»
		«ELSEIF dp instanceof DetailPage»
			«(dp as DetailPage).compile»
		«ENDIF»
	'''
	
	def compile(IndexPage ip) '''
		class «ip.name» {
			String path = «ip.path»;
			
			«ip.displayedClass.name» usedClass = new «ip.displayedClass.name»();
		}
	'''
	
	def compile(DetailPage dp) '''
		class «dp.name» {
			String path = «dp.path»;
			
			«dp.displayedClass.name» usedClass = new «dp.displayedClass.name»();
		}
	'''
	
	def compile(StaticPage sp) '''
		class «sp.name» {
			String path = «sp.path»;
		}
	'''
	
	def compile(ContentLayer c) '''
		«FOR cl : c.classes»
			«cl.compile»
		«ENDFOR»	
	'''
	
	def compile(WebClass cl) '''
		class «cl.name» {
			«FOR a : cl.attributes»
				«a.compile»
			«ENDFOR»
		}
	'''
	
	def compile(Attribute a) '''
	«IF a.type == AppTypes.BOOLEAN»
		private boolean «a.name»;
	«ELSEIF a.type == AppTypes.INTEGER»
		private int «a.name»;
	«ELSEIF a.type == AppTypes.FLOAT»
		private float «a.name»;
	«ELSEIF a.type == AppTypes.DOUBLE»
		private double «a.name»;
	«ELSEIF a.type == AppTypes.STRING»
		private String «a.name»;
	«ENDIF»
	'''
}
