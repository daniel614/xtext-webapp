/*
 * generated by Xtext 2.14.0
 */
package org.xtext.example.wappm.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.xtext.example.wappm.wappm.WebModel
import org.eclipse.xtext.testing.validation.ValidationTestHelper
import org.xtext.example.wappm.wappm.WappmPackage

@RunWith(XtextRunner)
@InjectWith(WappmInjectorProvider)
class WappmParsingTest {
	@Inject
	ParseHelper<WebModel> parser
	
	@Inject
	ValidationTestHelper validator
	
	@Test
	def void shouldValidateModel() {
		val model = parser.parse('''
			webapp TestApp {
				hypertext TestHyper {
					detail TestDetail uses SomeClass {
						path /test/
						links {
							link {
								page TestIndex
							}
						}
					}
					index TestIndex uses TestClass {
						path /test/
						size 3
					}
					
					static TestStatic {
						path /home/
					}
				}
				
				content TestContent {
					class Blub {
						attr name: Integer
						ref {
							 role test
							 bound[3,5]
						}
					}
					class TestClass {
						attr SampleAttr : String
					}
					class SomeClass {
						attr SampleAttr2 : String
					}
				}
			}
		''')
		
		validator.assertNoErrors(model)
	}
	
	@Test
	def void shouldOutputWarningAboutCapitalLetterWebModel() {
		val model = parser.parse('''
			webapp testApp {
				hypertext TestHyper {
					detail TestDetail uses SomeClass {
						path /test/
						links {
							link {
								page TestIndex
							}
						}
					}
					index TestIndex uses TestClass {
						path /test/
						size 3
					}
					
					static TestStatic {
						path /home/
					}
				}
				
				content TestContent {
					class Blub {
						attr name: Integer
						ref {
							 role test
							 bound[3,5]
						}
					}
					class TestClass {
						attr SampleAttr : String
					}
					class SomeClass {
						attr SampleAttr2 : String
					}
				}
			}
		''')
		
		validator.assertWarning(model, WappmPackage.Literals.WEB_MODEL, null, "Name should start with a capital letter")
	}
	
	@Test
	def void shouldOutputWarningAboutCapitalLetterClass() {
		val model = parser.parse('''
			webapp TestApp {
				hypertext TestHyper {
					detail TestDetail uses SomeClass {
						path /test/
						links {
							link {
								page TestIndex
							}
						}
					}
					index TestIndex uses TestClass {
						path /test/
						size 3
					}
					
					static TestStatic {
						path /home/
					}
				}
				
				content TestContent {
					class blub {
						attr name: Integer
						ref {
							 role test
							 bound[3,5]
						}
					}
					class TestClass {
						attr SampleAttr : String
					}
					class SomeClass {
						attr SampleAttr2 : String
					}
				}
			}
		''')
		
		validator.assertWarning(model, WappmPackage.Literals.WEB_CLASS, null, "Name should start with a capital letter")
	}
	
	@Test
	def void shouldOutputWarningAboutUniqueClass() {
		val model = parser.parse('''
			webapp TestApp {
				hypertext TestHyper {
					detail TestDetail uses SomeClass {
						path /test/
						links {
							link {
								page TestIndex
							}
						}
					}
					index TestIndex uses TestClass {
						path /test/
						size 3
					}
					
					static TestStatic {
						path /home/
					}
				}
				
				content TestContent {
					class Blub {
						attr name: Integer
						ref {
							 role test
							 bound[3,5]
						}
					}
					class Blub {
						attr SampleAttr : String
					}
					class SomeClass {
						attr SampleAttr2 : String
					}
				}
			}
		''')
		
		validator.assertError(model, WappmPackage.Literals.WEB_CLASS, null, "Class name must be unique")
	}
	
	@Test
	def void shouldOutputWarningAboutUpBoundLowBound() {
		val model = parser.parse('''
			webapp TestApp {
				hypertext TestHyper {
					detail TestDetail uses SomeClass {
						path /test/
						links {
							link {
								page TestIndex
							}
						}
					}
					index TestIndex uses TestClass {
						path /test/
						size 3
					}
					
					static TestStatic {
						path /home/
					}
				}
				
				content TestContent {
					class Blub {
						attr name: Integer
						ref {
							 role test
							 bound[4,3]
						}
					}
					class Blub {
						attr SampleAttr : String
					}
					class SomeClass {
						attr SampleAttr2 : String
					}
				}
			}
		''')
		
		validator.assertError(model, WappmPackage.Literals.REFERENCE, null, "lowbound must be smaller or equal to upBound")
	}
}
